name: Build and Test

on: [push, pull_request]

jobs:
  unix-build:
    name: Running tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - name: Kubernetes Kind Cluster
        id: kind
        uses: helm/kind-action@v1
        with:
          version: v0.24.0
          kubectl_version: v1.30.4
      - name: Validate kind is up
        run: kubectl get nodes

      - name: Deploy argocd
        run: kubectl apply -f ./k8s/install.yaml

      - name: test port
        run: curl -s https://localhost:30080/swagger.json

#    - name: build
#      run: ./build.ps1
#      shell: pwsh
#
#    - name: test
#      run: ./test.ps1
#      shell: pwsh


#  windows-build:
#    runs-on: windows-latest
#    needs: check
#    steps:
#      - uses: actions/checkout@v4
#      - name: Setup .NET SDK
#        uses: actions/setup-dotnet@v4
#        with:
#          dotnet-version: 8.x
#      - name: build
#        run: ./build.ps1
#        shell: pwsh
#      - name: test
#        run: ./test.ps1
#        shell: pwsh

#  test:
#    runs-on: ubuntu-latest
#    name: Test
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#
#
#      - name: Setup dotnet 3.1
#        uses: actions/setup-dotnet@v1
#        with:
#          dotnet-version: '3.1'
#      - name: Setup dotnet 5
#        uses: actions/setup-dotnet@v1
#        with:
#          dotnet-version: '5.0'
#      - name: Setup dotnet 6
#        uses: actions/setup-dotnet@v1
#        with:
#          dotnet-version: '6.0'
#
#      - run: dotnet tool install -g Codecov.Tool
#
#      - run: dotnet tool install -g GitVersion.Tool
#
#      - name: GitVersion
#        run: dotnet gitversion /l console /output buildserver
#
#      - run: ./build.ps1
#        shell: pwsh
#
#      - run: ./test.ps1
#        shell: pwsh

#      - name: Push NuGet
#        if: |
#          startsWith(github.event.ref, 'refs/tags/')
#          || endsWith(github.event.ref, '/master')
#          || github.event.action == 'published'
#        shell: pwsh
#        run: dotnet nuget push **/*.nupkg --source $Env:SOURCE --api-key $Env:TOKEN --skip-duplicate
#        env:
#          SOURCE: 'https://api.nuget.org/v3/index.json'
#          TOKEN: ${{ secrets.NUGET_API_KEY }}
